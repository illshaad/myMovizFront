{"ast":null,"code":"import _toConsumableArray from \"/Users/macbookpro/Desktop/myMoviz/front/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/macbookpro/Desktop/myMoviz/front/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/macbookpro/Desktop/myMoviz/front/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/macbookpro/Desktop/myMoviz/front/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/macbookpro/Desktop/myMoviz/front/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/macbookpro/Desktop/myMoviz/front/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/macbookpro/Desktop/myMoviz/front/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/macbookpro/Desktop/myMoviz/front/src/App.js\";\nimport React, { Component } from 'react';\nimport { Row, Container, Collapse, Navbar, NavbarToggler, Nav, NavItem, NavLink, Button, Popover, PopoverHeader, PopoverBody } from 'reactstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport Movie from './Movie';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.toggleNavBar = _this.toggleNavBar.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.togglePopOver = _this.togglePopOver.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleClickLikeOn = _this.handleClickLikeOn.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleClickLikeOff = _this.handleClickLikeOff.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleClick = _this.handleClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.state = {\n      isOpenNavBar: false,\n      isOpenPopOver: false,\n      viewOnlyLike: false,\n      moviesCount: 0,\n      moviesNameList: [],\n      movies: [],\n      moviesLiked: []\n    };\n    return _this;\n  } // We need to wait until the end of the fetch to render our component\n\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var ctx = this;\n      fetch('https://backmymoviz.herokuapp.com/movies').then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        console.log(data.movies);\n        ctx.setState({\n          movies: data.movies\n        });\n      }).catch(function (error) {\n        console.error(error);\n      });\n      fetch('https://backmymoviz.herokuapp.com/mymovies').then(function (response) {\n        return response.json();\n      }).then(function (movies) {\n        var moviesNameListCopy = movies.data.map(function (movie) {\n          return movie.title;\n        });\n        ctx.setState({\n          moviesLiked: movies.data,\n          moviesCount: movies.data.length,\n          moviesNameList: moviesNameListCopy\n        });\n        console.log('HERE THE MOVIES LIKED', ctx.state.moviesLiked);\n      }).catch(function (error) {\n        console.error(error);\n      });\n    }\n  }, {\n    key: \"toggleNavBar\",\n    value: function toggleNavBar() {\n      this.setState({\n        isOpenNavBar: !this.state.isOpenNavBar\n      });\n    }\n  }, {\n    key: \"togglePopOver\",\n    value: function togglePopOver() {\n      this.setState({\n        isOpenPopOver: !this.state.isOpenPopOver\n      });\n    }\n  }, {\n    key: \"handleClickLikeOn\",\n    value: function handleClickLikeOn() {\n      console.log(\"I only want to see the liked films\");\n      this.setState({\n        viewOnlyLike: true\n      });\n    }\n  }, {\n    key: \"handleClickLikeOff\",\n    value: function handleClickLikeOff() {\n      console.log(\"I want to see all the films available\");\n      this.setState({\n        viewOnlyLike: false\n      });\n    }\n  }, {\n    key: \"handleClick\",\n    value: function handleClick(isLike, name) {\n      // 1) First of all, we want to realize a copy of our state because it is an Array and we do not want to create a simple reference (for arrays and objects) but a real copy.\n      var moviesNameListCopy = _toConsumableArray(this.state.moviesNameList); // 2) If the movie is liked :\n\n\n      if (isLike) {\n        // 2.1) We want to push this specific movie and increment this.state.moviesCout\n        moviesNameListCopy.push(name);\n        this.setState({\n          moviesCount: this.state.moviesCount + 1,\n          moviesNameList: moviesNameListCopy\n        });\n      } // 3) If the movie is disliked :\n      else {\n          // 3.1) We want to target this specific movie, and then splice it\n          var index = moviesNameListCopy.indexOf(name);\n          moviesNameListCopy.splice(index, 1);\n          this.setState({\n            moviesCount: this.state.moviesCount - 1,\n            moviesNameList: moviesNameListCopy\n          });\n        }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      // Fake test dababase\n      // const moviesData = [\n      //   {name: 'L\\'Odyssée de Pi', desc: 'Après que leur bateau est victime d\\'une violente tempête et coule au fond du Pacifique, un adolescent et un tigre du Bengale …', img: '/pi.jpg'},\n      //   {name: 'Maléfique', desc: 'Poussée par la vengeance et une volonté farouche de protéger les terres qu\\'elle préside, Maléfique place ...', img: '/malefique.jpg'},\n      //   {name: 'Les Aventures de Tintin', desc: 'Parce qu\\'il achète la maquette d\\'un bateau appelé la Licorne, Tintin, un jeune reporter, se retrouve entraîné dans une fantastique aventure...', img: '/tintin.jpg'},\n      // ];\n      var movieList = this.state.movies.map(function (movie, i) {\n        var isLiked = false;\n\n        for (var y = 0; y < _this2.state.moviesLiked.length; y++) {\n          if (movie.id === _this2.state.moviesLiked[y].idMovieDB) {\n            isLiked = true;\n            break;\n          }\n        }\n\n        return React.createElement(Movie, {\n          key: i,\n          movieName: movie.title,\n          movieDesc: movie.overview,\n          movieImg: movie.poster_path,\n          displayOnlyLike: _this2.state.viewOnlyLike,\n          handleClickParent: _this2.handleClick,\n          idMovie: movie.id,\n          isLiked: isLiked,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 141\n          },\n          __self: this\n        });\n      });\n      var moviesLast = this.state.moviesNameList.slice(-3);\n\n      if (this.state.moviesCount === 0) {\n        moviesLast = \"Aucun film sélectionné.\";\n      } else if (this.state.moviesCount > 3) {\n        moviesLast = moviesLast.join(\", \") + \"...\";\n      } else {\n        moviesLast = moviesLast.join(\", \") + \".\";\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          marginBottom: 90\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, React.createElement(Navbar, {\n        color: \"dark\",\n        dark: true,\n        expand: \"md\",\n        fixed: \"top\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"navbar-brand\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: \"./logo.png\",\n        width: \"30\",\n        height: \"30\",\n        className: \"d-inline-block align-top\",\n        alt: \"logo myMoviz\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      })), React.createElement(NavbarToggler, {\n        onClick: this.toggleNavBar,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }), React.createElement(Collapse, {\n        isOpen: this.state.isOpenNavBar,\n        navbar: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, React.createElement(Nav, {\n        className: \"\",\n        navbar: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, React.createElement(NavItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, React.createElement(NavLink, {\n        onClick: this.handleClickLikeOff,\n        href: \"#\",\n        style: {\n          color: \"#FFFFFF\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, \"Last Releases\")), React.createElement(NavItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, React.createElement(NavLink, {\n        onClick: this.handleClickLikeOn,\n        href: \"#\",\n        style: {\n          color: \"#FFFFFF\",\n          marginRight: 10\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, \"My Movies\")), React.createElement(Button, {\n        id: \"Popover1\",\n        onClick: this.togglePopOver,\n        color: \"secondary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, this.state.moviesCount, this.state.moviesCount > 1 ? ' films' : ' film'), React.createElement(Popover, {\n        placement: \"bottom\",\n        isOpen: this.state.isOpenPopOver,\n        target: \"Popover1\",\n        toggle: this.togglePopOver,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, React.createElement(PopoverHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, \"Derniers films\"), React.createElement(PopoverBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, moviesLast)))))), React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, movieList)));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/macbookpro/Desktop/myMoviz/front/src/App.js"],"names":["React","Component","Row","Container","Collapse","Navbar","NavbarToggler","Nav","NavItem","NavLink","Button","Popover","PopoverHeader","PopoverBody","Movie","App","props","toggleNavBar","bind","togglePopOver","handleClickLikeOn","handleClickLikeOff","handleClick","state","isOpenNavBar","isOpenPopOver","viewOnlyLike","moviesCount","moviesNameList","movies","moviesLiked","ctx","fetch","then","response","json","data","console","log","setState","catch","error","moviesNameListCopy","map","movie","title","length","isLike","name","push","index","indexOf","splice","movieList","i","isLiked","y","id","idMovieDB","overview","poster_path","moviesLast","slice","join","marginBottom","color","marginRight"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {\n  Row,\n  Container,\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  Nav,\n  NavItem,\n  NavLink,\n  Button,\n  Popover,\n  PopoverHeader,\n  PopoverBody } from 'reactstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nimport Movie from './Movie';\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.toggleNavBar = this.toggleNavBar.bind(this);\n    this.togglePopOver = this.togglePopOver.bind(this);\n    this.handleClickLikeOn = this.handleClickLikeOn.bind(this);\n    this.handleClickLikeOff = this.handleClickLikeOff.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n    this.state = {\n      isOpenNavBar: false,\n      isOpenPopOver: false,\n      viewOnlyLike: false,\n      moviesCount: 0,\n      moviesNameList: [],\n      movies: [],\n      moviesLiked: [],\n    };\n  }\n\n  // We need to wait until the end of the fetch to render our component\n  componentDidMount() {\n    var ctx = this;\n    fetch('https://backmymoviz.herokuapp.com/movies')\n    .then(function(response){\n      return response.json();\n    }).then(function(data){\n      console.log(data.movies)\n      ctx.setState({movies: data.movies});\n    }).catch(function(error){\n      console.error(error);\n    });\n\n    fetch('https://backmymoviz.herokuapp.com/mymovies')\n    .then(function(response){\n      return response.json();\n    }).then(function(movies) {\n      var moviesNameListCopy = movies.data.map((movie) => {\n        return movie.title;\n      });\n      ctx.setState({\n        moviesLiked: movies.data,\n        moviesCount: movies.data.length,\n        moviesNameList: moviesNameListCopy\n      });\n      console.log('HERE THE MOVIES LIKED',ctx.state.moviesLiked);\n    }).catch(function(error) {\n      console.error(error);\n    });\n  };\n\n\n  toggleNavBar() {\n    this.setState({\n      isOpenNavBar: !this.state.isOpenNavBar\n    });\n  }\n\n  togglePopOver() {\n    this.setState({\n      isOpenPopOver: !this.state.isOpenPopOver\n    });\n  }\n\n  handleClickLikeOn() {\n    console.log(\"I only want to see the liked films\")\n    this.setState({\n      viewOnlyLike: true\n    })\n  }\n\n  handleClickLikeOff() {\n    console.log(\"I want to see all the films available\")\n    this.setState({\n      viewOnlyLike: false\n    })\n  }\n\n  handleClick(isLike, name) {\n    // 1) First of all, we want to realize a copy of our state because it is an Array and we do not want to create a simple reference (for arrays and objects) but a real copy.\n    var moviesNameListCopy = [...this.state.moviesNameList];\n\n    // 2) If the movie is liked :\n    if (isLike) {\n      // 2.1) We want to push this specific movie and increment this.state.moviesCout\n      moviesNameListCopy.push(name);\n      this.setState({\n        moviesCount: this.state.moviesCount+1,\n        moviesNameList: moviesNameListCopy,\n      })\n    }\n    // 3) If the movie is disliked :\n    else {\n      // 3.1) We want to target this specific movie, and then splice it\n      var index = moviesNameListCopy.indexOf(name)\n      moviesNameListCopy.splice(index, 1);\n      this.setState({\n        moviesCount: this.state.moviesCount-1,\n        moviesNameList: moviesNameListCopy,\n      })\n    }\n  }\n\n  render() {\n\n    // Fake test dababase\n    // const moviesData = [\n    //   {name: 'L\\'Odyssée de Pi', desc: 'Après que leur bateau est victime d\\'une violente tempête et coule au fond du Pacifique, un adolescent et un tigre du Bengale …', img: '/pi.jpg'},\n    //   {name: 'Maléfique', desc: 'Poussée par la vengeance et une volonté farouche de protéger les terres qu\\'elle préside, Maléfique place ...', img: '/malefique.jpg'},\n    //   {name: 'Les Aventures de Tintin', desc: 'Parce qu\\'il achète la maquette d\\'un bateau appelé la Licorne, Tintin, un jeune reporter, se retrouve entraîné dans une fantastique aventure...', img: '/tintin.jpg'},\n    // ];\n\n\n    var movieList = this.state.movies.map((movie, i) => {\n      var isLiked = false;\n      for (var y = 0; y < this.state.moviesLiked.length; y++) {\n        if (movie.id === this.state.moviesLiked[y].idMovieDB) {\n          isLiked = true;\n          break;\n        }\n      }\n      return(<Movie key={i} movieName={movie.title} movieDesc={movie.overview} movieImg={movie.poster_path} displayOnlyLike={this.state.viewOnlyLike} handleClickParent={this.handleClick} idMovie={movie.id} isLiked={isLiked}/>)\n    });\n\n\n    let moviesLast = this.state.moviesNameList.slice(-3)\n        if (this.state.moviesCount === 0) {\n          moviesLast = \"Aucun film sélectionné.\";\n        } else if (this.state.moviesCount > 3) {\n          moviesLast = moviesLast.join(\", \") + \"...\";\n        } else {\n          moviesLast = moviesLast.join(\", \") + \".\";\n        }\n\n    return (\n\n      <div>\n\n        <div style={{marginBottom: 90}}>\n          <Navbar color=\"dark\" dark expand=\"md\" fixed=\"top\">\n            <span className=\"navbar-brand\">\n              <img src=\"./logo.png\" width=\"30\" height=\"30\" className=\"d-inline-block align-top\" alt=\"logo myMoviz\"/>\n            </span>\n            <NavbarToggler onClick={this.toggleNavBar} />\n            <Collapse isOpen={this.state.isOpenNavBar} navbar>\n              <Nav className=\"\" navbar>\n                <NavItem>\n                  <NavLink onClick={this.handleClickLikeOff} href=\"#\" style={{color: \"#FFFFFF\"}}>Last Releases</NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink onClick={this.handleClickLikeOn} href=\"#\" style={{color: \"#FFFFFF\", marginRight: 10}}>My Movies</NavLink>\n                </NavItem>\n                <Button id=\"Popover1\" onClick={this.togglePopOver} color=\"secondary\">{this.state.moviesCount}{this.state.moviesCount > 1 ? ' films' : ' film'}</Button>\n                  <Popover placement=\"bottom\" isOpen={this.state.isOpenPopOver} target=\"Popover1\" toggle={this.togglePopOver}>\n                    <PopoverHeader>Derniers films</PopoverHeader>\n                    <PopoverBody>{moviesLast}</PopoverBody>\n                  </Popover>\n              </Nav>\n            </Collapse>\n          </Navbar>\n        </div>\n\n        <Container>\n          <Row>\n            {movieList}\n          </Row>\n        </Container>\n\n      </div>\n\n    );\n  }\n}\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}